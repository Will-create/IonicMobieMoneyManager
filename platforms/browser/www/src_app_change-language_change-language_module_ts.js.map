{"version":3,"file":"src_app_change-language_change-language_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEK;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAkB;KAC9B;CACF,CAAC;IAMW,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACF;AACS;AAET;AAEsC;AAEvB;IAY/C,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAVpC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACd,gEAAe;YACZ,4FAA+B;SAChC;QACD,YAAY,EAAE,CAAC,qEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACrBqB;AACJ;AACE;AACD;IAO1C,kBAAkB,SAAlB,kBAAkB;IAI7B,YAAwC,MAAiB,EAAU,OAAgB;QAA3C,WAAM,GAAN,MAAM,CAAW;QAAU,YAAO,GAAP,OAAO,CAAS;QACjF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAChD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7D,IAAI,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sFAA8B,CAAC,CAAC;QAC9E,IAAI,WAAW;YAAE,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;IAC1D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe,CAAC,QAAQ;QACtB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3C,CAAC;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACvD,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sFAA8B,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACxF,CAAC;CAEF;;4CAnBc,iDAAM,SAAC,mDAAU;YAZvB,kEAAO;;AAQH,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4EAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAuB9B;AAvB8B","sources":["./src/app/change-language/change-language-routing.module.ts","./src/app/change-language/change-language.module.ts","./src/app/change-language/change-language.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangeLanguagePage } from './change-language.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangeLanguagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangeLanguagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\t\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangeLanguagePageRoutingModule } from './change-language-routing.module';\n\nimport { ChangeLanguagePage } from './change-language.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n\tTranslateModule,   \n    ChangeLanguagePageRoutingModule\n  ],\n  declarations: [ChangeLanguagePage]\n})\nexport class ChangeLanguagePageModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { APP_CONFIG, AppConfig } from '../app.config';\nimport { MyEvent } from 'src/services/myevent.services';\nimport { Constants } from 'src/models/contants.models';\n\n@Component({\n  selector: 'app-change-language',\n  templateUrl: './change-language.page.html',\n  styleUrls: ['./change-language.page.scss'],\n})\nexport class ChangeLanguagePage implements OnInit {\n  defaultLanguageCode;\n  languages: Array<{ code: string, name: string }>;\n\n  constructor(@Inject(APP_CONFIG) private config: AppConfig, private myEvent: MyEvent) {\n    this.languages = this.config.availableLanguages;\n    this.defaultLanguageCode = config.availableLanguages[0].code;\n    let defaultLang = window.localStorage.getItem(Constants.KEY_DEFAULT_LANGUAGE);\n    if (defaultLang) this.defaultLanguageCode = defaultLang;\n  }\n\n  ngOnInit() {\n  }\n\n  onLanguageClick(language) {\n    this.defaultLanguageCode = language.code;\n  }\n\n  languageConfirm() {\n    this.myEvent.setLanguageData(this.defaultLanguageCode);\n    window.localStorage.setItem(Constants.KEY_DEFAULT_LANGUAGE, this.defaultLanguageCode);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}