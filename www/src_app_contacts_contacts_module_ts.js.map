{"version":3,"file":"src_app_contacts_contacts_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,8KAAkC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;KACvF;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACpBG;AACM;AACF;AACO;AACP;AACQ;AACiB;AAEvB;IAalC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAX9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,gEAAe;YACf,kEAAmB;YACnB,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACrBgC;AACb;AACS;AACT;IAOrC,YAAY,SAAZ,YAAY;IASvB,YAAoB,IAAiB,EAAU,MAAe;QAA1C,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAS;QAPvD,aAAQ,GAAS,EAAE,CAAC;QACpB,mBAAc,GAAY,CAAC,CAAC;QACnC,gBAAW,GAAG;YACZ,OAAO,EAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAG,kBAAkB,EAAC,CAAC;SACjE;QAIC,IAAI,CAAC,OAAO,GAAG,2EAAqB,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,2BAA2B,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YACvF,IAAG,IAAI,CAAC,OAAO,CAAC,GAAC,CAAC,EAAC;gBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;aAC5C;QACH,CAAC,CAAC;IACH,CAAC;IAEF,QAAQ;IACR,CAAC;IACD,OAAO,CAAC,OAAW;QACjB,IAAI,MAAM,GAAsB;YAC9B,KAAK,EAAG;gBACN,OAAO,EAAG,OAAO,CAAC,OAAO;gBACzB,OAAO,EAAG,OAAO;aAClB;SACF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAC,MAAM,CAAC,CAAC;IACpD,CAAC;CACF;;YAxCQ,4DAAU;YAEQ,mDAAM;;AAQpB,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qEAAmC;;KAEpC,CAAC;GACW,YAAY,CA8BxB;AA9BwB","sources":["./src/app/contacts/contacts-routing.module.ts","./src/app/contacts/contacts.module.ts","./src/app/contacts/contacts.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactsPage } from './contacts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactsPage\n  },\n  {\n    path: 'details',\n    loadChildren: () => import('./details/details.module').then( m => m.DetailsPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport {Ng2SearchPipeModule} from 'ng2-search-filter'\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\n\nimport { ContactsPage } from './contacts.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    Ng2SearchPipeModule,\n    ContactsPageRoutingModule\n  ],\n  declarations: [ContactsPage]\n})\nexport class ContactsPageModule {}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Helper } from 'src/models/helper.models';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.page.html',\n  styleUrls: ['./contacts.page.scss'],\n})\nexport class ContactsPage implements OnInit {\n  public searchTerm : string;\n  public contacts : any = [];\n  public contacts_count : number = 0;\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type' : 'application/json'})\n  }\n  private baseUrl : string;\n\n  constructor(private http : HttpClient, private router : Router) {\n    this.baseUrl = Helper.getApiHostname();\n    this.http.get(this.baseUrl+'api/mobile/contacts/list/',this.httpOptions).subscribe(list=>{\n      if(list['count']>0){\n        this.contacts = list['items'];\n        this.contacts_count = list['items'].length;\n      }\n    })\n   }\n\n  ngOnInit() {\n  }\n  details(contact:any){\n    let extras : NavigationExtras = {\n      state : {\n        numbers : contact.numbers,\n        contact : contact\n      }\n    }\n    this.router.navigate(['contacts/details'],extras);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}